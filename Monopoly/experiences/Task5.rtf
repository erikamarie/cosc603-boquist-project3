{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Task 5- Refactoring-Renaming a Class Field\
\
In renaming the class field, it seemed that there were a lot of missed renaming. After refactoring and I received a huge number of errors. I wasn't sure I had done it correctly so after ctrl-Z, I reopened the Rename Dialog and noticed I had selected the "Keep original fields as delegates to renames fields." I"m not sure what that means, but when I unchecked that option and refactored, it worked perfectly. \
\
The parameter that wasn't changed from owner to theOwner is not an oversight. It's a variable local to that method, it is not a class variable. This refactoring option is not the same as find and replace. In a find and replace scenario this parameter would have been changed, and if I'm remembering correctly, the setOwner would not be changed to setTheOwner in a find/replace.}