{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Task6-Refactoring: Changing a Class Hierarchy\
\
For this task I selected not only the file name "available" but also the two additional methods isAvailable and setAvailable.  These three items were indeed pushed to all the sub classes of the cell class, causing errors in the edu.ncsu.monopoly folder, specifically the GameMaster.java and Player.java files.The pullUp refactoring option words quite well.\
\
The design smells that this particular type of refactoring could alleviate would be having the same code in multiple subclasses when they should be in one shared or super class(pullUp). Conversely, in some instances it may be beneficial to have repeated code in classes that should not be sharing code(pushDown).}